#=================================================================
# QSC related build stage
# -----------------------

FROM alpine:3.10 as qsc_openssl
LABEL stage=qsc_openssl

USER root

# -----------------------------------------------------
# ==> VERSION CONTROL via ARG

# OpenSSL (see here: https://www.openssl.org/source/)
ARG OpenSSL_version=openssl-1.1.1g
# PGP KeyID Matt Caswell & Richard Levitte (see here: https://www.openssl.org/community/omc.html)
ARG OpenSSL_KeyID1=8657ABB260F056B1E5190839D9C4D26D0E604491
ARG OpenSSL_KeyID2=7953AC1FBC3DC8B3B292393ED5E9E43F7DF9EE8C

# -----------------------------------------------------
# ==> PREREQUISITES USED DURING BUILD PROCESS
RUN apk update && apk upgrade && \
    apk add linux-headers build-base gnupg perl curl gnutls gnutls-dev \
            libcurl gcompat git bash zlib zlib-dev dpkg cmake ninja doxygen && \
    mkdir /thirdparty && \
    mkdir /thirdparty/install && \
    mkdir /thirdparty/install/openssl_oqs

# improve compilation times
ARG CORES=$nproc

# -----------------------------------------------------
# ==> LOAD VERIFICATION KEYS
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys $OpenSSL_KeyID1 && \
    gpg --keyserver pool.sks-keyservers.net --recv-keys $OpenSSL_KeyID2 

# ----------------SYSTEM_UPDATES-----------------------
# -----------------------------------------------------
# ==> OPENSSL BUILD FROM SOURCE (for SYSTEM)
RUN cd /thirdparty &&  \
    wget https://www.openssl.org/source/${OpenSSL_version}.tar.gz && \
    wget https://www.openssl.org/source/${OpenSSL_version}.tar.gz.asc && \
        gpg --verify $OpenSSL_version.tar.gz.asc ${OpenSSL_version}.tar.gz && \
        tar -xzf ${OpenSSL_version}.tar.gz && \
        rm ${OpenSSL_version}.tar* && \
    cd /thirdparty/${OpenSSL_version} && \
    cp ./Configurations/10-main.conf . && \
    ./config \
        --release \
        -DFAST_PCLMUL -DECP_NISTZ256_ASM -DO3 \
        -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \
        --with-rand-seed=rdcpu,os \
        enable-ec_nistp_64_gcc_128 \
        enable-tls1_3 no-ssl no-tls1 no-tls1_1 \
        no-afalgeng no-tests && \
    make -j${CORES} && make -j${CORES} install_sw

# ----------------QSC_RELATED_UPDATES------------------
# -----------------------------------------------------
# ==> OQS-OpenSSL BUILD FROM SOURCE (with QSC capabilities)
#git checkout 24570943eca60e26246227f899f428757351ca4e && \

RUN cd /thirdparty && \
    git clone --single-branch --branch OQS-OpenSSL_1_1_1-stable \
              https://github.com/open-quantum-safe/openssl.git OQSopenssl && \
    cd OQSopenssl && mkdir oqs && \
    #sed -i  '/"linux-generic32"*/ a shlib_variant =>"_oqs",' Configurations/10-main.conf && \
    git clone --branch master https://github.com/open-quantum-safe/liboqs.git && \
         cd liboqs && \
         mkdir build && cd build && \
         printf "\033[1;33m" && cmake -LAH .. && printf "\033[0m" && rm -rf * && \
         cmake -GNinja \
               -DBUILD_SHARED_LIBS=OFF \
               -DCMAKE_INSTALL_PREFIX=/thirdparty/OQSopenssl/oqs \
#               -DOQS_ENABLE_KEM_bike1_l1_cpa=OFF \ 
#               -DOQS_ENABLE_KEM_bike1_l1_fo=OFF \
#               -DOQS_ENABLE_KEM_bike1_l3_cpa=OFF \
#               -DOQS_ENABLE_KEM_bike1_l3_fo=OFF \
               .. && \
         ninja  && ninja install
RUN cd /thirdparty/OQSopenssl && \
   ./Configure linux-x86_64 \
        --prefix=/thirdparty/install/openssl_oqs \
        -I/thirdparty/OQSopenssl/liboqs/build/include \
        -L/thirdparty/OQSopenssl/liboqs/build/lib -loqs \
        -DFAST_PCLMUL -DECP_NISTZ256_ASM -DO3 \
        -DOQS_DEFAULT_GROUPS="p256_kyber512:prime256v1:secp384r1:secp521r1:X25519:X448:kyber512:kyber768:kyber1024:p384_kyber768:p521_kyber1024" \
#        -DOQS_KEM_DEFAULT="OQS_KEM_alg_kyber_512" \
        -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' \
        --with-rand-seed=rdcpu,os \
        enable-ec_nistp_64_gcc_128 \
        enable-tls1_3 no-ssl no-tls1 no-tls1_1 \ 
        no-aria no-bf no-blake2 no-camellia no-cast \
        no-dsa no-idea no-md4 no-mdc2 no-ocb \
        no-poly1305 no-rc2 no-rc4 no-rmd160 no-scrypt \
        no-siphash no-sm2 no-sm3 no-sm4 no-whirlpool no-gost \
#        no-ec2m \
        no-afalgeng no-tests \
        shared threads \
        -lm \
        && \
    make -j${CORES} && make -j${CORES} install_sw 

# ------------------------------
# End of QSC related build stage
#=================================================================

# For the remainder of the build process, we use 
# HAproxy from here: https://github.com/haproxytech/haproxy-docker-alpine
# Kubernetes-ingress from here: https://github.com/haproxytech/kubernetes-ingress
# BUT: We upgrade HAproxy to v2.2.2, we override the OpenSSL libs with their QSC-enabled counterparts,...
# ...we replace ssl-default-bind-options, ssl-default-bind-ciphers, and we introduce ssl-default-bind-curves
# ...for which we use (default values of) environment variables (HAPROXY_DEFAULT_CIPHERS, HAPROXY_DEFAULT_CURVES) for the latter two...
# ...and limit the former to use only TLSv1.2 and TLSv1.3 (of which only TLSv1.3 is QSC-enabled)

